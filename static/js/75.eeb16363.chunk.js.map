{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-menu_3-ios.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["Menu","hostRef","registerInstance","this","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","config","get","el","parent","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","error","typeChanged","sideChanged","menuController","_register","gesture","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onWillStart","onStart","onMove","onEnd","destroy","_unregister","backdropEl","detail","isPane","timeStamp","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","getIonMode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","isOpen","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","getTimeGivenProgression","clamp","playTo","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","enable","forceClosing","_setActiveMenu","h","Host","role","class","ref","tappable","getElement","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","menu","a","menuEl","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","createColorClasses","hostContext","icon","lazy","MenuToggle","selector","closest","length","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","test","router","push"],"mappings":"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","file":"static/js/75.eeb16363.chunk.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-d8b49b57.js';\nimport './animation-f72ade61.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport { m as menuController } from './index-9af8638a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? easingReverse : easing)\n            .onFinish(() => {\n            if (ani.getDirection() === 'reverse') {\n                ani.direction('normal');\n            }\n        });\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.play({ sync: true });\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, isPaneVisible } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    /*STENCIL:MODE:ios*/ ios: menuIosCss,\n    /*STENCIL:MODE:md*/ md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && await menuEl.isActive());\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    /*STENCIL:MODE:ios*/ ios: menuButtonIosCss,\n    /*STENCIL:MODE:md*/ md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}