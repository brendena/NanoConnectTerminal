{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-toggle-md.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js","../node_modules/@ionic/core/dist/esm-es5/haptic-ccbda579.js"],"names":["Toggle","hostRef","registerInstance","this","inputId","toggleIds","lastDrag","activated","name","checked","disabled","value","onClick","Date","now","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","createEvent","ionStyle","isChecked","emitStyle","gesture","enable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","ev","onEnd","disabledChanged","destroy","undefined","setFocus","detail","shouldToggle","document","deltaX","hapticSelection","event","preventDefault","stopImmediatePropagation","buttonEl","focus","color","mode","getIonMode","labelId","label","findItemLabel","getValue","id","renderHiddenInput","h","Host","role","class","Object","assign","createColorClasses","hostContext","type","ref","btnEl","getElement","doc","margin","isRTL","dir","style","ios","md","selector","closest","length","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","direction","a","test","router","querySelector","push","engine","window","TapticEngine","selection","hapticSelectionStart","gestureSelectionStart","hapticSelectionChanged","gestureSelectionChanged","hapticSelectionEnd","gestureSelectionEnd"],"mappings":"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","file":"static/js/stencil-ion-toggle-md-entry-js.076548e2.chunk.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\nimport { h as hapticSelection } from './haptic-ccbda579.js';\n\nconst toggleIosCss = \":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.088);--background-checked:var(--ion-color-primary, #3880ff);--handle-background:#ffffff;--handle-background-checked:#ffffff;--border-radius:16px;--handle-border-radius:14px;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:51px;height:32px;contain:strict}:host(.ion-color.toggle-checked) .toggle-icon{background:var(--ion-color-base)}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:background-color 300ms;transition:background-color 300ms;background:var(--background);overflow:hidden;pointer-events:none}.toggle-inner{left:2px;top:2px;border-radius:var(--handle-border-radius);position:absolute;width:28px;height:28px;-webkit-transition:width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;transition:width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms;transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms, -webkit-transform 300ms;background:var(--handle-background);-webkit-box-shadow:0 3px 12px rgba(0, 0, 0, 0.16), 0 3px 1px rgba(0, 0, 0, 0.1);box-shadow:0 3px 12px rgba(0, 0, 0, 0.16), 0 3px 1px rgba(0, 0, 0, 0.1);will-change:transform;contain:strict}[dir=rtl] .toggle-inner,:host-context([dir=rtl]) .toggle-inner{left:unset;right:unset;right:2px}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-activated) .toggle-icon::before,:host(.toggle-checked) .toggle-icon::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(19px,  0,  0);transform:translate3d(19px,  0,  0);background:var(--handle-background-checked)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner,:host-context([dir=rtl]).toggle-checked .toggle-inner{-webkit-transform:translate3d(calc(-1 * 19px),  0,  0);transform:translate3d(calc(-1 * 19px),  0,  0)}:host(.toggle-activated.toggle-checked) .toggle-inner::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-activated) .toggle-inner{width:34px}:host(.toggle-activated.toggle-checked) .toggle-inner{left:-4px}:host-context([dir=rtl]):host(.toggle-activated.toggle-checked) .toggle-inner,:host-context([dir=rtl]).toggle-activated.toggle-checked .toggle-inner{left:unset;right:unset;right:-4px}:host(.toggle-disabled){opacity:0.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:20px;padding-right:10px;padding-top:6px;padding-bottom:5px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:10px;padding-inline-end:10px}}:host(.in-item[slot=start]){padding-left:0;padding-right:16px;padding-top:6px;padding-bottom:5px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:0;padding-inline-start:0;-webkit-padding-end:16px;padding-inline-end:16px}}\";\n\nconst toggleMdCss = \":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.3);--background-checked:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.5);--handle-background:#ffffff;--handle-background-checked:var(--ion-color-primary, #3880ff);--border-radius:14px;--handle-border-radius:50%;padding-left:12px;padding-right:12px;padding-top:12px;padding-bottom:12px;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:36px;height:14px;contain:strict}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-color.toggle-checked) .toggle-icon{background:rgba(var(--ion-color-base-rgb), 0.5)}:host(.ion-color.toggle-checked) .toggle-inner{background:var(--ion-color-base)}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:background-color 160ms;transition:background-color 160ms;background:var(--background);pointer-events:none}.toggle-inner{left:0;top:-3px;border-radius:var(--handle-border-radius);position:absolute;width:20px;height:20px;-webkit-transition-duration:160ms;transition-duration:160ms;-webkit-transition-property:background-color, -webkit-transform;transition-property:background-color, -webkit-transform;transition-property:transform, background-color;transition-property:transform, background-color, -webkit-transform;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);background:var(--handle-background);-webkit-box-shadow:0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);box-shadow:0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);will-change:transform, background-color;contain:strict}[dir=rtl] .toggle-inner,:host-context([dir=rtl]) .toggle-inner{left:unset;right:unset;right:0}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(16px,  0,  0);transform:translate3d(16px,  0,  0);background:var(--handle-background-checked)}:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner,:host-context([dir=rtl]).toggle-checked .toggle-inner{-webkit-transform:translate3d(calc(-1 * 16px),  0,  0);transform:translate3d(calc(-1 * 16px),  0,  0)}:host(.toggle-disabled){opacity:0.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:0;padding-top:12px;padding-bottom:12px;cursor:pointer}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:0;padding-inline-end:0}}:host(.in-item[slot=start]){padding-left:2px;padding-right:18px;padding-top:12px;padding-bottom:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:18px;padding-inline-end:18px}}\";\n\nconst Toggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-tg-${toggleIds++}`;\n        this.lastDrag = 0;\n        this.activated = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the toggle is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the toggle.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            if (this.lastDrag + 300 < Date.now()) {\n                this.checked = !this.checked;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n    }\n    disabledChanged() {\n        this.emitStyle();\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.el,\n            gestureName: 'toggle',\n            gesturePriority: 100,\n            threshold: 5,\n            passive: false,\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive-disabled': this.disabled,\n        });\n    }\n    onStart() {\n        this.activated = true;\n        // touch-action does not work in iOS\n        this.setFocus();\n    }\n    onMove(detail) {\n        if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\n            this.checked = !this.checked;\n            hapticSelection();\n        }\n    }\n    onEnd(ev) {\n        this.activated = false;\n        this.lastDrag = Date.now();\n        ev.event.preventDefault();\n        ev.event.stopImmediatePropagation();\n    }\n    getValue() {\n        return this.value || '';\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, disabled, checked, activated, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        const value = this.getValue();\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'toggle-activated': activated, 'toggle-checked': checked, 'toggle-disabled': disabled, 'interactive': true }) }, h(\"div\", { class: \"toggle-icon\" }, h(\"div\", { class: \"toggle-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nconst shouldToggle = (doc, checked, deltaX, margin) => {\n    const isRTL = doc.dir === 'rtl';\n    if (checked) {\n        return (!isRTL && (margin > deltaX)) ||\n            (isRTL && (-margin < deltaX));\n    }\n    else {\n        return (!isRTL && (-margin < deltaX)) ||\n            (isRTL && (margin > deltaX));\n    }\n};\nlet toggleIds = 0;\nToggle.style = {\n    /*STENCIL:MODE:ios*/ ios: toggleIosCss,\n    /*STENCIL:MODE:md*/ md: toggleMdCss\n};\n\nexport { Toggle as ion_toggle };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n"],"sourceRoot":""}