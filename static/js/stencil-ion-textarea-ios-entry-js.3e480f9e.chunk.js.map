{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["Textarea","hostRef","registerInstance","this","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","createEvent","ionStyle","debounceEvent","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","readTask","style","height","scrollHeight","textareaWrapper","focus","Promise","resolve","placeholder","hasValue","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","class","Object","assign","createColorClasses","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","getElement","ios","md","hostContext","selector","closest","length","undefined","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","direction","a","test","router","querySelector","preventDefault","push"],"mappings":"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","file":"static/js/stencil-ion-textarea-ios-entry-js.3e480f9e.chunk.js","sourcesContent":["import { r as registerInstance, d as createEvent, f as readTask, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-d8b49b57.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\n\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\n\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n\nconst Textarea = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    componentDidLoad() {\n        this.runAutoGrow();\n    }\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'auto';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n                if (this.textareaWrapper) {\n                    this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\n                }\n            });\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet textareaIds = 0;\nTextarea.style = {\n    /*STENCIL:MODE:ios*/ ios: textareaIosCss,\n    /*STENCIL:MODE:md*/ md: textareaMdCss\n};\n\nexport { Textarea as ion_textarea };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}