{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/focus-visible-15ada7f7.js"],"names":["FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":"gIAAA,6DAEMA,EAAa,CAAC,MAAO,YAAa,QAAS,SAAU,IAAK,QAAS,QAAS,YAAa,aAAc,WACvGC,EAAoB,WACtB,IAAIC,EAAe,GACfC,GAAe,EACbC,EAAMC,SACNC,EAAW,SAACC,GACdL,EAAaM,SAAQ,SAAAC,GAAE,OAAIA,EAAGC,UAAUC,OAR5B,kBASZJ,EAASC,SAAQ,SAAAC,GAAE,OAAIA,EAAGC,UAAUE,IATxB,kBAUZV,EAAeK,GAEbM,EAAc,WAChBV,GAAe,EACfG,EAAS,KAEbF,EAAIU,iBAAiB,WAAW,SAAAC,IAC5BZ,EAAeH,EAAWgB,SAASD,EAAGE,OAElCX,EAAS,OAGjBF,EAAIU,iBAAiB,WAAW,SAAAC,GAC5B,GAAIZ,GAAgBY,EAAGG,aAAc,CACjC,IAAMC,EAAUJ,EAAGG,eAAeE,QAAO,SAACX,GACtC,QAAIA,EAAGC,WACID,EAAGC,UAAUW,SAzBlB,oBA6BVf,EAASa,OAGjBf,EAAIU,iBAAiB,YAAY,WACzBV,EAAIkB,gBAAkBlB,EAAImB,MAC1BjB,EAAS,OAGjBF,EAAIU,iBAAiB,aAAcD,GACnCT,EAAIU,iBAAiB,YAAaD","file":"static/js/1.f97c76a3.chunk.js","sourcesContent":["const ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\nconst startFocusVisible = () => {\n    let currentFocus = [];\n    let keyboardMode = true;\n    const doc = document;\n    const setFocus = (elements) => {\n        currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n        elements.forEach(el => el.classList.add(ION_FOCUSED));\n        currentFocus = elements;\n    };\n    const pointerDown = () => {\n        keyboardMode = false;\n        setFocus([]);\n    };\n    doc.addEventListener('keydown', ev => {\n        keyboardMode = FOCUS_KEYS.includes(ev.key);\n        if (!keyboardMode) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('focusin', ev => {\n        if (keyboardMode && ev.composedPath) {\n            const toFocus = ev.composedPath().filter((el) => {\n                if (el.classList) {\n                    return el.classList.contains(ION_FOCUSABLE);\n                }\n                return false;\n            });\n            setFocus(toFocus);\n        }\n    });\n    doc.addEventListener('focusout', () => {\n        if (doc.activeElement === doc.body) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('touchstart', pointerDown);\n    doc.addEventListener('mousedown', pointerDown);\n};\n\nexport { startFocusVisible };\n"],"sourceRoot":""}