{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-md.entry.js","../node_modules/@ionic/core/dist/esm-es5/index-729ec402.js","../node_modules/@ionic/core/dist/esm-es5/spinner-configs-c78e170e.js"],"names":["HapticEngine","getEngine","win","window","TapticEngine","Capacitor","Plugins","Haptics","available","this","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","createAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","writeTask","forEach","el","i","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","isPlatform","webkitOverflowScrolling","transitionEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","Refresher","hostRef","registerInstance","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","ionRefresh","createEvent","ionPull","ionStart","gesture","enable","useNativeRefresher","getIonMode","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","readTask","scrollTop","refresherHeight","ratio","clamp","emit","Math","abs","pullAmount","floor","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","getTimeGivenProgression","snapBackAnimation","a","play","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","getScrollElement","backgroundContentEl","raf","close","detail","event","touches","Number","isNaN","setCss","cancelable","preventDefault","cancel","complete","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","h","Host","slot","class","getElement","ios","md","RefresherContent","pullingIcon","overflowRefresher","config","get","hasSpinner","SPINNERS","name","paused","icon","lazy","pullingText","innerHTML","sanitizeDOMString","refreshingText","untrustedString","documentFragment","document","createDocumentFragment","workingDiv","createElement","appendChild","blockedTags","blockedTag","getElementsToRemove","elementIndex","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","err","nodeType","attributes","attribute","item","attributeName","allowedAttributes","includes","toLowerCase","attributeValue","removeAttribute","children","childNodes","dur","circles","fn","index","total","animationDelay","angle","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","_","lines","y1","y2"],"mappings":"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","file":"static/js/61.30a7f11f.chunk.js","sourcesContent":["import { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-2cd7e630.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-a175fa73.js';\nimport './utils-35117408.js';\nimport './index.mjs';\nimport { c as clamp, r as raf } from './helpers-d8b49b57.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport './index-157155ee.js';\nimport './ios.transition-11c6a0fa.js';\nimport './md.transition-3e9127c1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport './index-9af8638a.js';\nimport './overlays-998692a2.js';\nimport { s as sanitizeDOMString } from './index-729ec402.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nconst getRefresherAnimationType = (contentEl) => {\n    const previousSibling = contentEl.previousElementSibling;\n    const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n    return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n    return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n    const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n    const circle = spinner.shadowRoot.querySelector('circle');\n    const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n    const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n    const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n    const baseAnimation = createAnimation()\n        .duration(1000)\n        .easing('ease-out');\n    const spinnerArrowContainerAnimation = createAnimation()\n        .addElement(spinnerArrowContainer)\n        .keyframes([\n        { offset: 0, opacity: '0.3' },\n        { offset: 0.45, opacity: '0.3' },\n        { offset: 0.55, opacity: '1' },\n        { offset: 1, opacity: '1' }\n    ]);\n    const circleInnerAnimation = createAnimation()\n        .addElement(circle)\n        .keyframes([\n        { offset: 0, strokeDasharray: '1px, 200px' },\n        { offset: 0.20, strokeDasharray: '1px, 200px' },\n        { offset: 0.55, strokeDasharray: '100px, 200px' },\n        { offset: 1, strokeDasharray: '100px, 200px' }\n    ]);\n    const circleOuterAnimation = createAnimation()\n        .addElement(spinner)\n        .keyframes([\n        { offset: 0, transform: 'rotate(-90deg)' },\n        { offset: 1, transform: 'rotate(210deg)' }\n    ]);\n    /**\n     * Only add arrow animation if present\n     * this allows users to customize the spinners\n     * without errors being thrown\n     */\n    if (arrowContainer && arrow) {\n        const arrowContainerAnimation = createAnimation()\n            .addElement(arrowContainer)\n            .keyframes([\n            { offset: 0, transform: 'rotate(0deg)' },\n            { offset: 0.30, transform: 'rotate(0deg)' },\n            { offset: 0.55, transform: 'rotate(280deg)' },\n            { offset: 1, transform: 'rotate(400deg)' }\n        ]);\n        const arrowAnimation = createAnimation()\n            .addElement(arrow)\n            .keyframes([\n            { offset: 0, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n            { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n        ]);\n        baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n    }\n    return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'scale(1) translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n    return createAnimation()\n        .duration(125)\n        .addElement(pullingRefresherIcon)\n        .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n    spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n    writeTask(() => {\n        setSpinnerOpacity(spinner, opacity);\n        ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n    });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n    writeTask(() => {\n        // If user pulls down quickly, the spinner should spin faster\n        spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n        spinner.style.setProperty('opacity', '1');\n    });\n};\nconst translateElement = (el, value) => {\n    if (!el) {\n        return Promise.resolve();\n    }\n    const trans = transitionEndAsync(el);\n    writeTask(() => {\n        el.style.setProperty('transition', '0.2s all ease-out');\n        if (value === undefined) {\n            el.style.removeProperty('transform');\n        }\n        else {\n            el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n        }\n    });\n    return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n    const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    return (pullingSpinner !== null &&\n        refreshingSpinner !== null &&\n        ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n            mode === 'md'));\n};\nconst transitionEndAsync = (el) => {\n    return new Promise(resolve => {\n        transitionEnd(el, resolve);\n    });\n};\nconst transitionEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        this.pointerDown = false;\n        this.needsCompletion = false;\n        this.didRefresh = false;\n        this.lastVelocityY = 0;\n        this.animations = [];\n        this.nativeRefresher = false;\n        /**\n         * The current state which the refresher is in. The refresher's states include:\n         *\n         * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n         * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n         * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n         * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n         * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n         * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n         */\n        this.state = 1 /* Inactive */;\n        /**\n         * The minimum distance the user must pull down until the\n         * refresher will go into the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMin = 60;\n        /**\n         * The maximum distance of the pull until the refresher\n         * will automatically go into the `refreshing` state.\n         * Defaults to the result of `pullMin + 60`.\n         * Does not apply when  the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMax = this.pullMin + 60;\n        /**\n         * Time it takes to close the refresher.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.closeDuration = '280ms';\n        /**\n         * Time it takes the refresher to to snap back to the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.snapbackDuration = '280ms';\n        /**\n         * How much to multiply the pull speed by. To slow the pull animation down,\n         * pass a number less than `1`. To speed up the pull, pass a number greater\n         * than `1`. The default value is `1` which is equal to the speed of the cursor.\n         * If a negative value is passed in, the factor will be `1` instead.\n         *\n         * For example: If the value passed is `1.2` and the content is dragged by\n         * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n         * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n         * will be `8` pixels, less than the amount the cursor has moved.\n         *\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullFactor = 1;\n        /**\n         * If `true`, the refresher will be hidden.\n         */\n        this.disabled = false;\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    checkNativeRefresher() {\n        const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n        if (useNativeRefresher && !this.nativeRefresher) {\n            const contentEl = this.el.closest('ion-content');\n            this.setupNativeRefresher(contentEl);\n        }\n        else if (!useNativeRefresher) {\n            this.destroyNativeRefresher();\n        }\n    }\n    destroyNativeRefresher() {\n        if (this.scrollEl && this.scrollListenerCallback) {\n            this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n            this.scrollListenerCallback = undefined;\n        }\n        this.nativeRefresher = false;\n    }\n    async resetNativeRefresher(el, state) {\n        this.state = state;\n        if (getIonMode(this) === 'ios') {\n            await translateElement(el, undefined);\n        }\n        else {\n            await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'));\n        }\n        this.didRefresh = false;\n        this.needsCompletion = false;\n        this.pointerDown = false;\n        this.animations.forEach(ani => ani.destroy());\n        this.animations = [];\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n        this.elementToTransform = this.scrollEl;\n        const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n        const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        const NUM_TICKS = ticks.length;\n        writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n        this.scrollListenerCallback = () => {\n            // If pointer is not on screen or refresher is not active, ignore scroll\n            if (!this.pointerDown && this.state === 1 /* Inactive */) {\n                return;\n            }\n            readTask(() => {\n                // PTR should only be active when overflow scrolling at the top\n                const scrollTop = this.scrollEl.scrollTop;\n                const refresherHeight = this.el.clientHeight;\n                if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (this.state === 8 /* Refreshing */) {\n                        const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n                        return;\n                    }\n                    writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n                    return;\n                }\n                if (this.pointerDown) {\n                    if (!this.didStart) {\n                        this.didStart = true;\n                        this.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (this.pointerDown) {\n                        this.ionPull.emit();\n                    }\n                }\n                // delay showing the next tick marks until user has pulled 30px\n                const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n                if (shouldShowRefreshingSpinner) {\n                    if (this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n                    }\n                    if (!this.didRefresh) {\n                        this.beginRefresh();\n                        this.didRefresh = true;\n                        hapticImpact({ style: 'light' });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n                        if (!this.pointerDown) {\n                            translateElement(this.elementToTransform, `${refresherHeight}px`);\n                        }\n                    }\n                }\n                else {\n                    this.state = 2 /* Pulling */;\n                    handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                }\n            });\n        };\n        this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            onStart: () => {\n                this.pointerDown = true;\n                if (!this.didRefresh) {\n                    translateElement(this.elementToTransform, '0px');\n                }\n            },\n            onMove: ev => {\n                this.lastVelocityY = ev.velocityY;\n            },\n            onEnd: () => {\n                this.pointerDown = false;\n                this.didStart = false;\n                if (this.needsCompletion) {\n                    this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n                    this.needsCompletion = false;\n                }\n                else if (this.didRefresh) {\n                    readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n                }\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n        const circle = pullingSpinner.shadowRoot.querySelector('circle');\n        const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n        const refreshingCircle = refreshingSpinner.shadowRoot.querySelector('circle');\n        if (circle !== null && refreshingCircle !== null) {\n            writeTask(() => {\n                circle.style.setProperty('animation', 'none');\n                // This lines up the animation on the refreshing spinner with the pulling spinner\n                refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                refreshingCircle.style.setProperty('animation-delay', '-655ms');\n            });\n        }\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n            onStart: (ev) => {\n                ev.data = { animation: undefined, didStart: false, cancelled: false };\n            },\n            onMove: (ev) => {\n                if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                }\n                if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    this.state = 2 /* Pulling */;\n                    writeTask(() => {\n                        const animationType = getRefresherAnimationType(contentEl);\n                        const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n                        this.scrollEl.style.setProperty('--overflow', 'hidden');\n                        animation.progressStart(false, 0);\n                        this.ionStart.emit();\n                        this.animations.push(animation);\n                    });\n                    return;\n                }\n                // Since we are using an easing curve, slow the gesture tracking down a bit\n                this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n                ev.data.animation.progressStep(this.progress);\n                this.ionPull.emit();\n            },\n            onEnd: (ev) => {\n                if (!ev.data.didStart) {\n                    return;\n                }\n                writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n                if (this.progress <= 0.4) {\n                    this.gesture.enable(false);\n                    ev.data.animation\n                        .progressEnd(0, this.progress, 500)\n                        .onFinish(() => {\n                        this.animations.forEach(ani => ani.destroy());\n                        this.animations = [];\n                        this.gesture.enable(true);\n                        this.state = 1 /* Inactive */;\n                    });\n                    return;\n                }\n                const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n                const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                this.animations.push(snapBackAnimation);\n                writeTask(async () => {\n                    pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n                    ev.data.animation.progressEnd();\n                    await snapBackAnimation.play();\n                    this.beginRefresh();\n                    ev.data.animation.destroy();\n                });\n            }\n        });\n        this.disabledChanged();\n    }\n    async setupNativeRefresher(contentEl) {\n        if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n            return;\n        }\n        this.nativeRefresher = true;\n        const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n        const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n        if (getIonMode(this) === 'ios') {\n            this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n        }\n        else {\n            this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n        }\n    }\n    componentDidUpdate() {\n        this.checkNativeRefresher();\n    }\n    async connectedCallback() {\n        if (this.el.getAttribute('slot') !== 'fixed') {\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n            return;\n        }\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-refresher> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.backgroundContentEl = contentEl.shadowRoot.querySelector('#background-content');\n        if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n            this.setupNativeRefresher(contentEl);\n        }\n        else {\n            this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n                el: contentEl,\n                gestureName: 'refresher',\n                gesturePriority: 10,\n                direction: 'y',\n                threshold: 20,\n                passive: false,\n                canStart: () => this.canStart(),\n                onStart: () => this.onStart(),\n                onMove: ev => this.onMove(ev),\n                onEnd: () => this.onEnd(),\n            });\n            this.disabledChanged();\n        }\n    }\n    disconnectedCallback() {\n        this.destroyNativeRefresher();\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    async complete() {\n        if (this.nativeRefresher) {\n            this.needsCompletion = true;\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n            }\n        }\n        else {\n            this.close(32 /* Completing */, '120ms');\n        }\n    }\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    async cancel() {\n        if (this.nativeRefresher) {\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n            }\n        }\n        else {\n            this.close(16 /* Cancelling */, '');\n        }\n    }\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    getProgress() {\n        return Promise.resolve(this.progress);\n    }\n    canStart() {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    }\n    onStart() {\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    onMove(detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        const ev = detail.event;\n        if (ev.touches && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* _BUSY_ */) !== 0) {\n            return;\n        }\n        const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n        const deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        const pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* Ready */;\n        return;\n    }\n    onEnd() {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n    }\n    beginRefresh() {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this)\n        });\n    }\n    close(state, delay) {\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(() => {\n            this.state = 1 /* Inactive */;\n            this.progress = 0;\n            this.didStart = false;\n            this.setCss(0, '0ms', false, '');\n        }, 600);\n        // reset set the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n        // TODO: stop gesture\n    }\n    setCss(y, duration, overflowVisible, delay) {\n        if (this.nativeRefresher) {\n            return;\n        }\n        this.appliedStyles = (y > 0);\n        writeTask(() => {\n            if (this.scrollEl && this.backgroundContentEl) {\n                const scrollStyle = this.scrollEl.style;\n                const backgroundStyle = this.backgroundContentEl.style;\n                scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n                scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n                scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n                scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n            }\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`refresher-${mode}`]: true,\n                'refresher-native': this.nativeRefresher,\n                'refresher-active': this.state !== 1 /* Inactive */,\n                'refresher-pulling': this.state === 2 /* Pulling */,\n                'refresher-ready': this.state === 4 /* Ready */,\n                'refresher-refreshing': this.state === 8 /* Refreshing */,\n                'refresher-cancelling': this.state === 16 /* Cancelling */,\n                'refresher-completing': this.state === 32 /* Completing */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nRefresher.style = {\n    /*STENCIL:MODE:ios*/ ios: refresherIosCss,\n    /*STENCIL:MODE:md*/ md: refresherMdCss\n};\n\nconst RefresherContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            const mode = getIonMode(this);\n            const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n                h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n            h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n            h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n            h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n"],"sourceRoot":""}