{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-avatar_3-md.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["Avatar","hostRef","registerInstance","this","h","Host","class","getIonMode","style","ios","md","Badge","mode","Object","assign","createColorClasses","color","Thumbnail","hostContext","selector","el","closest","length","undefined","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","ev","direction","a","test","router","document","querySelector","preventDefault","push"],"mappings":"uSAQMA,EAAM,WACR,WAAYC,GAAS,oBACjBC,YAAiBC,KAAMF,GAFnB,qDAKJ,OAAQG,YAAEC,IAAM,CAAEC,MAAOC,YAAWJ,OAASC,YAAE,OAAQ,WALnD,KAQZJ,EAAOQ,MAAQ,CACUC,IAbJ,4PAcGC,GAZJ,6PAepB,IAIMC,EAAK,WACP,WAAYV,GAAS,oBACjBC,YAAiBC,KAAMF,GAFpB,qDAKH,IAAMW,EAAOL,YAAWJ,MACxB,OAAQC,YAAEC,IAAM,CAAEC,MAAOO,OAAOC,OAAOD,OAAOC,OAAO,GAAIC,YAAmBZ,KAAKa,QAAxDH,OAAA,IAAAA,CAAA,GAAoED,GAAO,KAAWR,YAAE,OAAQ,WANtH,KASXO,EAAMH,MAAQ,CACWC,IAdL,kjCAeIC,GAbL,+nCAgBnB,IAEMO,EAAS,WACX,WAAYhB,GAAS,oBACjBC,YAAiBC,KAAMF,GAFhB,qDAKP,OAAQG,YAAEC,IAAM,CAAEC,MAAOC,YAAWJ,OAASC,YAAE,OAAQ,WALhD,KAQfa,EAAUT,MAVW,+Q,4MCvCfU,EAAc,SAACC,EAAUC,GAC3B,OAAgC,OAAzBA,EAAGC,QAAQF,IAKhBJ,EAAqB,SAACC,GACxB,MAAyB,kBAAVA,GAAsBA,EAAMM,OAAS,EAA7C,aACH,aAAa,GADV,oBAEWN,IAAU,QACxBO,GAYFC,EAAc,SAACC,GACjB,IAAMC,EAAM,GAEZ,OAbiB,SAACD,GAClB,YAAgBF,IAAZE,GACcE,MAAMC,QAAQH,GAAWA,EAAUA,EAAQI,MAAM,MAE1DC,QAAO,SAAAC,GAAC,OAAS,MAALA,KACZL,KAAI,SAAAK,GAAC,OAAIA,EAAEC,UACXF,QAAO,SAAAC,GAAC,MAAU,KAANA,KAEd,GAIPE,CAAaR,GAASS,SAAQ,SAAAH,GAAC,OAAIL,EAAIK,IAAK,KACrCL,GAELS,EAAS,uBACTC,EAAO,uCAAG,WAAOC,EAAKC,EAAIC,GAAhB,eAAAC,EAAA,yDACD,MAAPH,GAA0B,MAAXA,EAAI,IAAeF,EAAOM,KAAKJ,GADtC,qBAEFK,EAASC,SAASC,cAAc,eAF9B,uBAIM,MAANN,GACAA,EAAGO,iBALH,kBAOGH,EAAOI,KAAKT,EAAKE,IAPpB,iCAUL,GAVK,2CAAH","file":"static/js/stencil-ion-avatar_3-md-entry-js.8a979fb9.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\n\nconst avatarIosCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:48px;height:48px}\";\n\nconst avatarMdCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:64px;height:64px}\";\n\nconst Avatar = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n    }\n};\nAvatar.style = {\n    /*STENCIL:MODE:ios*/ ios: avatarIosCss,\n    /*STENCIL:MODE:md*/ md: avatarMdCss\n};\n\nconst badgeIosCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{border-radius:10px}\";\n\nconst badgeMdCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{--padding-top:3px;--padding-end:4px;--padding-bottom:4px;--padding-start:4px;border-radius:4px}\";\n\nconst Badge = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"slot\", null)));\n    }\n};\nBadge.style = {\n    /*STENCIL:MODE:ios*/ ios: badgeIosCss,\n    /*STENCIL:MODE:md*/ md: badgeMdCss\n};\n\nconst thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\n\nconst Thumbnail = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n    }\n};\nThumbnail.style = thumbnailCss;\n\nexport { Avatar as ion_avatar, Badge as ion_badge, Thumbnail as ion_thumbnail };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}